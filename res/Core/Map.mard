import Core.Maybe

class Pair<K, V> do
  k: K
  v: V

  Pair k: K, v: V do
    this.k = k
    this.v = v

class Map<K, V> do
  storage = List<Pair<K,V>>()
  a = 0

  Map do
    this.a = 1

  hasKey key: K -> bool do
    ret true

  findKeyIndex key: K -> int do
    ret -1

  get key: K, default: V -> V do
    index = findKeyIndex(key)
    if index > -1 then
      ret storage.get(index)
    else
      ret default

  put key: K, value: V -> void do
    index = findKeyIndex(key)
    if index > -1 then
      storage.replace(index, Pair(key, value))
    else
      storage.add(Pair(key, value))


